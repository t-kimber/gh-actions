# This is a basic workflow to help you get started with Actions

name: my_gh_actions_tests # name that will show on GH actions page

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "testCI"
  testCI:
    name: Testing on OS ${{matrix.os}}
    # The type of runner that the job will run on
      # Ubuntu will download/checkout/clone/run our code
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest]
        # ls commands won't work on windows-latest
        python-version: [3.7]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo what is in this directly
          ls -a
          echo
          echo is java installed?
          java -version
          echo
          echo is git installed?
          git --version
          echo and python?
          python --version
          echo is conda installed?
          conda --version
          
      - name: Install conda environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: devtools/my_test_env.yaml
          activate-environment: my_test_env

      - name: Check conda environment
        shell: bash -l {0}
        run: conda list
      
      - name: Pytest installation # Sanity check
        shell: bash -l {0}
        run: |
          echo is Pytest installed ? 
          pytest --version
          
      - name: Generate code coverage report
        shell: bash -l {0}
        run: pytest --cov=./ --cov-report=xml --color=yes
    
      #- name: Code coverage & more
      #  run: bash <(curl -s https://codecov.io/bash)
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella-${{ matrix.os }}-py${{ matrix.python-version }}
          
      - name: Install flake8
        run: pip install flake8
        
      - name: Lint error with flake8
        run: flake8 .
        
        
           
